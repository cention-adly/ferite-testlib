uses 'console';

function test (string description) {
	object t = recipient();
	TestSuite.tests.push([
		'description' => description,
		'test_closure' => t
	]);
}

function testsuite (string description) {
	object s = recipient();
	TestSuite.init(description);
	s.invoke();
	TestSuite.run();
}

namespace TestSuite {
	string description;
	array tests;
	array errors;
	number count;
	
	function init (string d) {
		.tests = [];
		.errors = [];
		.count = 0;
		.description = d;
	}
	
	function run () {
		if (argv.valueExists('tap')) {
			Console.println('1..' + .tests.size());
		}
		else {
			Console.println('Running test suite: ' + .description);
		}
	
		.tests.each() using (testcase) {
			monitor {
				testcase.test_closure.invoke();
			}
			handle {
				void trace = err.backtrace[0];
				.errors.push([
					'description' => testcase.description,
					'error' => err.str,
					'trace' => "${trace['file']}:${trace['line']}"
				]);
				.print('not ok', .count, testcase.description, err.str);
				.count++;
				return;
			}
			.print('ok', .count, testcase.description, '');
			.count++;
		};
	
		if (!argv.valueExists('tap')) {		
			if (.count == .tests.size()) {
				Console.println("${.count} tests complete.");
			}
			else {
				Console.println(
					"Tests failed to run to completion." +
					" ${.count} out of ${.tests.size()} tests complete."
				);
			}
		
			if (.errors.size() == 0) {
				Console.println('All OK');
			}
			else {
				Console.println("${.errors.size()} out of ${.count} tests FAILED");
				Console.println('================================================');
				Console.println(
					.errors.process() using (e) {
						return e.error + "\n\t" + e.trace;
					}.join(     "------------------------------------------------\n")
				);
				Console.println('================================================');
			}
		}
	}
	
	function print (string status, number count, string txt, string error) {
		if (argv.valueExists('tap')) {
			Console.println([status,count+1,'-',txt, (error == ''?'':', '+error)].join(' '));
		}
		else if (argv.valueExists('verbose')) {
			if (status == 'ok') {
				Console.println('OK: ' + txt);
			}
			else {
				Console.println('FAIL: ' + txt + "\n\t" + error);
			}
		}
	}
}
